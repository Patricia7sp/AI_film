---
# Flask Upload Interface Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-upload
  namespace: ai-film
  labels:
    app: flask-upload
    component: web-interface
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-upload
  template:
    metadata:
      labels:
        app: flask-upload
        component: web-interface
    spec:
      containers:
      - name: flask
        image: ghcr.io/your-org/ai-film-pipeline:latest  # Atualizar com sua imagem
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: DAGSTER_URL
          value: "http://dagster.ai-film.svc.cluster.local:3000"
        - name: LANGGRAPH_URL
          value: "http://langgraph.ai-film.svc.cluster.local:8080"
        - name: COMFYUI_URL
          valueFrom:
            configMapKeyRef:
              name: comfyui-config
              key: COMFYUI_URL
        volumeMounts:
        - name: images-storage
          mountPath: /app/uploads
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: images-storage
        persistentVolumeClaim:
          claimName: images-pvc

---
# Flask Upload Service
apiVersion: v1
kind: Service
metadata:
  name: flask-upload
  namespace: ai-film
  labels:
    app: flask-upload
spec:
  type: LoadBalancer  # Ou ClusterIP se usar Ingress
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: flask-upload
