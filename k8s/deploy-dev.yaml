---
# PostgreSQL Minimal
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: ai-film
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:15-alpine
        env:
        - name: POSTGRES_USER
          value: dagster
        - name: POSTGRES_PASSWORD
          value: dagster_password
        - name: POSTGRES_DB
          value: dagster
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: ai-film
spec:
  ports:
  - port: 5432
  selector:
    app: postgresql
---
# Redis Minimal
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: ai-film
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: ai-film
spec:
  ports:
  - port: 6379
  selector:
    app: redis
---
# Dagster Minimal
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dagster
  namespace: ai-film
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dagster
  template:
    metadata:
      labels:
        app: dagster
    spec:
      containers:
      - name: dagster
        image: busybox:latest
        command: ['sh', '-c', 'echo "Dagster Placeholder" && sleep infinity']
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: dagster
  namespace: ai-film
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000
  selector:
    app: dagster
---
# LangGraph Minimal
apiVersion: apps/v1
kind: Deployment
metadata:
  name: langgraph
  namespace: ai-film
spec:
  replicas: 1
  selector:
    matchLabels:
      app: langgraph
  template:
    metadata:
      labels:
        app: langgraph
    spec:
      containers:
      - name: langgraph
        image: busybox:latest
        command: ['sh', '-c', 'echo "LangGraph Placeholder" && sleep infinity']
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: langgraph
  namespace: ai-film
spec:
  ports:
  - port: 8080
  selector:
    app: langgraph
---
# Flask Upload Minimal
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-upload
  namespace: ai-film
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-upload
  template:
    metadata:
      labels:
        app: flask-upload
    spec:
      containers:
      - name: flask
        image: busybox:latest
        command: ['sh', '-c', 'echo "Flask Placeholder" && sleep infinity']
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: flask-upload
  namespace: ai-film
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30001
  selector:
    app: flask-upload
